- For loop repeats the code block once for each value in a list or list like value.

>>> for i in range(4):
	print(i)

	
0
1
2
3


>>> for i in [0,1,2,3]:
	print(i)

	
0
1
2
3
>>> 

- return value from range(4) is a sequence value
- list() function: To get the actual list values from a range object then pass the range object to the list() function. 

>>> list(range(4))
[0, 1, 2, 3]

>>> list(range(0,100,2))
[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98]
>>> spam = list(range(0,100,2))
>>> spam
[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98]

>>> supplies = ['pens', 'staples', 'flame_thrower', 'binders']
>>> for i in range(len(supplies)):
	print('Index ' + str(i) + ' in supplies is: ' + supplies[i])

- Multiple assignment:technically called tuple unpacking - is a shortcut that lets you assign multiple variables with the values in a list in one line of code.

>>> cat = ['fat', 'orange', 'loud']
>>> size = cat[0]
>>> color = cat[1]
>>> disposition = cat[2]
>>> size
'fat'
>>> color
'orange'
>>> disposition
'loud'

>>> size, color, disposition = cat
>>> size
'fat'
>>> color
'orange'
>>> disposition
'loud'
>>> 

- The number of variables and the length of the list must be exactly equal, or Python will give you a ValueError:

>>> size, color, disposition = 'skinny', 'black','quiet'
>>> size
'skinny'
>>> color
'black'
>>> disposition
'quiet'

Swap: 
>>> a = 'AAA'
>>> b = 'BBB'
>>> a, b = b, a
>>> b
'AAA'
>>> a
'BBB'

- Augmented assignment operators:
>>> spam = 42
>>> spam = spam + 1
>>> spam
43
>>> spam += 1
>>> spam
44

spam += 1 spam = spam + 1
spam -= 1 spam = spam - 1
spam *= 1 spam = spam * 1
spam /= 1 spam = spam / 1
spam %= 1 spam = spam % 1

The += operator can also do string and list concatenation, and the *= operator can do string and list replication.

>>> spam = 'Hello,'
>>> spam += ' world!'
>>> spam
'Hello world!'
>>> bacon = ['Zophie']
>>> bacon *= 3
>>> bacon
['Zophie', 'Zophie', 'Zophie']

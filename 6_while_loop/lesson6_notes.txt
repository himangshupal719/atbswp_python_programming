In code, a while statement always consists of the following:

- The while keyword
- A condition (that is, an expression that evaluates to True or False)
- A colon
- Starting on the next line, an indented block of code (called the while clause)

Iteration 
Infinite loop - It is a while loop whose condition is always True. An infinite loop that never exits is a common programming bug. If you ever run a program that has a bug causing it to get stuck in an infinite loop, press CTRL-C or select Shell ▸ Restart Shell from IDLE’s menu. This will send a KeyboardInterrupt error to your program and cause it to stop immediately. CTRL-C is also handy if you want to simply terminate your program immediately, even if it’s not stuck in an infinite loop.

Break - There is a shortcut to getting the program execution to break out of a while loop’s clause early. If the execution reaches a break statement, it immediately exits the while loop’s clause.

Continue - Like break statements, continue statements are used inside loops. When the program execution reaches a continue statement, the program execution immediately jumps back to the start of the loop and reevaluates the loop’s condition. 

Truthy and Falsey values: 
Conditions will consider some values in other data types equivalent to True and False. When used in conditions, 0, 0.0, and '' (the empty string) are considered False, while all other values are considered True.

name = ''
while not name:
    print('Enter your name:')
    name = input()
print('How many guests will you have?')
numOfGuests = int(input())
if numOfGuests:
    print('Be sure to have enough room for all your guests.')
print('Done')